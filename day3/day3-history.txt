vi user-web.yaml
kubectl apply -f user-web.yaml
kubectl get pods
kubectl delete pods all
kubectl delete pods --all
kubectl apply -f user-web.yaml
vi user-web-svc.yaml
kubectl apply -f user-web-svc.yaml
kubectl exec -it user-web -- curl user-web-svc
kubectl get svc
iptables -L -v- n
sudo iptables -L -v -n
kubectl get svc
kubectl delete svc web-svc
kubectl delete svc user-web-svc 
kubectl apply -f user-web-svc.yaml 
kubectl get svc
kubectl exec -it user-web -- curl user-web-svc
kubectl delete svc user-web-svc 
kubectl delete pod user-web 
mv user-web.yaml clusterIP-web.yaml
vi clusterIP-web.yaml
mv user-web-svc.yaml clusterIP-web-svc.yaml 
vi clusterIP-web-svc.yaml
kubectl apply -f clusterIP-web*
kubectl apply -f clusterIP-web-svc.yaml 
vi clusterIP-web-svc.yaml
kubectl apply -f clusterIP-web-svc.yaml 
kubectl apply -f clusterIP-web.yaml 
vi clusterIP-web.yaml
kubectl apply -f clusterIP-web.yaml 
kubectl expose pod clusterip-web --type=NodePort --port=80 --dry-run=client
kubectl expose pod clusterip-web --type=NodePort --port=80 --dry-run=client -o yaml
cp clusterIP-web-svc.yaml nodeport-web-svc.yaml
vi nodeport-web-svc.yaml
kubectl apply -f nodeport-web-svc.yaml
kubec get svc
kubectl get svc
vi nodeport-web-svc.yaml
kubectl apply -f nodeport-web-svc.yaml
kubectl get svc
kubectl delete svc nodeport-web-svc 
kubectl get svc
kubectl apply -f nodeport-web-svc.yaml
kubectl get svc
vi nodeport-web-svc.yaml
kubectl expose pod clusterip-web --name=loadbalancer-web-svc --port=80 --external-ip=192.168.190.40 --dry-run=client -o yaml
kubectl expose pod clusterip-web --name=loadbalancer-web-svc --port=80 --external-ip=192.168.190.40 --dry-run=client -o yaml > loadbalancer-web-svc.yaml
vi loadbalancer-web-svc.yaml
kubectl apply -f loadbalancer-web-svc.yaml
kubec get svc
kubectl get svc
vi loadbalancer-web-svc.yaml
kubectl apply -f loadbalancer-web-svc.yaml
kubectl get svc
vi loadbalancer-web-svc.yaml
kubectl apply -f loadbalancer-web-svc.yaml
kubectl get svc
kubectl get svc -n kube-system 
vi test-dns.yaml
kubectl apply -f test-dns.yaml
kubectl exec -it test-dns -- nslookup loadbalancer-web-svc
kubectl delete pod test-dns 
kubectl apply -f test-dns.yaml -n dev
kubectl exec -it test-dns -- bash -n dev
kubectl -n dev exec -it test-dns -- bash 
kubectl -n dev exec -it test-dns -- sh 
ls -la
cat -la
cat test-dns.yaml
cat test-dns.yaml > replica-set.yaml
vi replica-set.yaml
kubectl get pods
kubectl get rs
kubectl apply -f replica-set.yaml
kubectl api-resources | grep rs
vi replica-set.yaml
kubectl apply -f replica-set.yaml
kubectl get rs
kubectl get pods
kubectl delete -f replica-set.yaml
kubectl delete pod --all
kubectl delete svc --all
kubectl get pods
kubectl get rs
kubec get svc
kubectl get svc
kubectl apply -f replica-set.yaml 
kubectl get rs
kubectl get po
kubectl get rs
kubectl scale rs replica-set --replicas=8
kubectl get rs
watch -n1 kubectl get pods
kubectl get pods
kubectl delete pod replica-set-mrc2c; kubectl get rs; watch -n1 kubectl get pods
kubectl scale rs replica-set --replicas=1
kubectl delete pod replica-set-mrc2c; kubectl get rs; watch -n1 kubectl get pods
cp replica-set.yaml deployment.yaml
vi deployment.yaml
mv deployment.yaml my-deployment.yaml
vi my-deployment.yaml
kubectl apply -f my-deployment.yaml
kubectl get deploy
kubectl get all --all
kubectl get all -n default 
kubectl get deploy
kubectl scale deployment my-deployment --replicas=5
kubectl describe deployments.apps my-deployment 
kubectl scale deployment my-deployment --replicas=3 --recorde
kubectl scale deployment my-deployment --replicas=3 --record
kubectl describe deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment 
watch -n1 kubectl get pods
kubectl describe deployments.apps my-deployment 
kubectl set image deployment my-deployment nginx=nginx:1.14.2 --record
kubectl describe deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment 
kubectl describe deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment 
watch -n1 kubectl get pods
kubectl rollout status deployment my-deployment 
kubectl rollout history deployment my-deployment 
kubectl set image deployment my-deployment nginx=nginx:1.19.2 --record
kubectl rollout status deployment my-deployment 
kubectl rollout history deployment my-deployment 
kubectl rollout undo deployment my-deployment --to-revision=3
kubectl rollout history deployment my-deployment 
kubectl describe deployments.apps my-deployment 
kubectl annotate deployments.apps my-deployment kubernetes.io/change-cause="rollback application to older version"
kubectl describe deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment 
kubectl describe deployments.apps my-deployment 
kubectl rollout history deployment my-deployment 
kubec get pods
kubectl get pods
kubectl exec -it my-deployment-586f986b49-qh2dj
kubectl exec -it my-deployment-586f986b49-qh2dj -- env
env
kubectl exec -it my-deployment-586f986b49-qh2dj -- env
kubectl logs -l app=web
kubectl edit deployments.apps my-deployment 
kubectl logs -l app=web
kubectl logs 
kubectl edit deployments.apps my-deployment 
kubectl logs my-deployment-586f986b49-qh2dj
kubectl edit deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment -c nginx
kubectl logs my-deployment-586f986b49-qh2dj -c nginx
kubectl logs --help
kubectl delete deployments.apps my-deployment 
kubectl get logs
kubectl get pods
kubectl get rs
kubectl get deploy
vi daemon-set.yaml
mv daemon-set.yaml my-daemon-set.yaml
kubectl apply -f my-daemon-set.yaml
kubectl get ds
kubectl get pods -o wide
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
kubectl get pods,svc -n ingress-nginx
kubectl -n ingress-nginx annotate ingressclasses nginx ingressclass.kubernetes.io/is-default-class="true"
vi app1-with-ingress.yaml
kubectl apply -f app1-with-ingress.yaml
kubectl get all -n app1 -o wide
kubectl get pods,svc -n ingress-nginx
curl http://192.168.5.50:31912 -H 'Host:app1.example.com'
curl http://192.168.5.50:31912 -H 'Host: app1.example.com'
curl http://192.168.190.42:31912 -H 'Host: app1.example.com'
curl http://192.168.190.42:31912
curl http://192.168.190.42:31912 -H 'Host: app1.example.com'
curl http://192.168.190.43:31912 -H 'Host: app1.example.com'
curl http://192.168.190.40:31912 -H 'Host: app1.example.com'
kubectl edit service ingress-nginx-controller -n ingress-nginx
kubectl get pods,svc -n ingress-nginx
kubectl edit deployments.apps -n app1 app1 
curl http://192.168.190.40 -H 'Host: app1.example.com'
kubectl edit deployments.apps -n app1 app1 
kubectl edit ingress -n app1 app1-ingress 
curl http://192.168.190.40/app1 -H 'Host: app1.192.168.190.40.nip.io'
curl http://192.168.190.40/ -H 'Host: app1.192.168.190.40.nip.io'
kubectl edit ingress -n app1 app1-ingress 
curl http://192.168.190.40/ -H 'Host: app1.192.168.190.40.nip.io'
kubectl edit ingress -n app1 app1-ingress 
curl http://192.168.190.40/ -H 'Host: app2.192.168.190.40.nip.io'
kubectl edit ingress -n app1 app1-ingress 
kubectl edit deployments.apps -n app1 app1 
kubectl delete deployments.apps -n app1 app1 
cp app1-with-ingress.yaml app2-python-ingress.yaml
vi app2-python-ingress.yaml
kubectl applt -f app2-python-ingress.yaml
kubectl apply -f app2-python-ingress.yaml
kubectl get all -n app1 
kubectl get ing -n app1 
kubectl get all --all-namespaces 
kubectl get ns
kubec get pods,deploy
kubectl get pods,deploy
kubectl delete ds my-daemonset 
vi volume-pod.yaml
kubectl apply -f volume-pod.yaml
kubectl exec -it volume-pod -- bash
kubectl get pods
kubectl exec -it volume-pod -- bash
kubectl get pods -o wide
vi test-pv.yml
vi test-pv.yaml
vi test-pvc.yaml
vi test-volume-nginx.yaml
kubectl apply -f test-pv.yaml 
kubectl get pv
kubectl apply -f test-pvc.yaml 
kubectl get pvc
kubectl get pv
kubectl apply -f test-volume-nginx.yaml 
kubectl get pods
kubectl exec -it test-volume-nginx-65d4f976c-4r27f -- sh
kubectl delete pvc test-pvc 
kubectl get pv
kubectl get pvc
kubectl delete pv test-pv 
kubectl delete deploy test-volume-nginx 
kubectl get pvc
kubectl get pv
cp -rp test-pv.yaml delete-pv.yaml
vi delete-pv.yaml
cp -rp test-pvc.yaml delete-pvc.yaml
vi delete-pvc.yaml
cp -rp test-volume-nginx.yaml delete-volume-nginx.yaml
vi delete-volume-nginx.yaml
kubectl apply -f delete-pv.yaml 
vi delete-pv.yaml
kubectl apply -f delete-pv.yaml 
kubectl apply -f delete-pvc.yaml 
kubectl get v
kubectl get pv
kubectl get pvc
kubectl create -f delete-volume-nginx.yaml 
kubectl get pods
kubectl exec -it delete-volume-nginx-c4fcf454b-plv75 -- ls /usr/share/nginx/html
kubectl delete deploy delete-volume-nginx 
kubectl delete pvc delete-pvc 
kubectl get pv
kubectl get pvc
kubectl apply -f delete-pvc.yaml 
kubectl get pvc
kubectl get pv
kubectl delete pv delete-pv 
kubectl get pv
kubectl get pvc
kubectl apply -f delete-pv.yaml 
kubectl get pv
kubectl get pvc
kubectl apply -f  delete-pvc.yaml 
kubectl get pvc
kubectl get pv
kubectl delete pv delete-pv 
kubectl get pvs
kubectl get pvc
kubectl get pv
kubectl get deploy
kubectl get pv
kubectl get pvc
kubectl delete pvc delete-pvc 
kubectl get pvc
kubectl get pv
kubectl apply -f delete-pv.yaml 
kubectl apply -f delete-pvc.yaml 
kubectl apply -f delete-volume-nginx.yaml 
kubectl exec -it delete-volume-nginx-c4fcf454b-plv75 -- ls /usr/share/nginx/html
kubectl get pv
kubectl delete pvc delete-pvc 
kubectl get pv
kubectl get pvc
kubectl delete pv delete-pv 
kubectl get pvc
kubectl get pv
kubectl get pv,pvc
kubectl get pods
kubectl delete deployments.apps delete-volume-nginx 
kubectl get pv,pvc
kubectl apply -f delete-pv.yaml 
kubectl apply -f delete-pvc.yaml 
kubectl apply -f delete-volume-nginx.yaml.yaml 
kubectl apply -f delete-volume-nginx.yaml 
kubectl get pv,pvc
kubectl delete deploy delete-volume-nginx 
kubectl delete pvc delete-pvc 
kubectl get pv
kubectl get pvc
kubectl get pv
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
kubectl describe configmaps my-configmap 
vi env-file
kubectl create configmap fromfile --from-env-file=env-file 
kubectl describe configmaps fromfile 
mkdir cm
cp env-file cm/
vi cm/env-file2
kubectl create configmap fromfiles --from-file=cm/
kubectl describe configmaps fromfiles
vi configmap-pod.yaml
vi service.json
kubectl apply -f configmap-pod.yaml 
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml 
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml 
kubectl logs configmap-pod 
kubectl get pods
vi service.json 
kubectl logs configmap-pod 
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml 
kubectl get pods
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml 
kubectl delete pod configmap-pod 
kubectl apply -f configmap-pod.yaml 
kubectl get pods
kubectl logs configmap-pod 
kubectl describe configmaps fromfile
vi configmap-pod.yaml
kubectl create secret 
kubectl create secret generic my-secret --from-literal pas=S3cret --from-literal root_pw=student
kubectl describe secrets my-secret 
kubectl get secrets my-secret -o yaml > my-secret.yaml
vi my-secret.yaml
echo c3R1ZGVudA== | base64 -d
vi my-secret.yaml
echo UzNjcmV0 | base64 -d
vi my-secret.yaml
kubectl get secret
kubectl get secret --all-namespaces 
kubectl get secrets -n ingress-nginx ingress-nginx-admission -o yaml
vi mariadb-root
kubectl create secret generic mariadb-pass --from-file mariadb-root 
kubectl get secrets mariadb-pass -o yaml
vi my-configmap.yaml 
ls
vi configmap-pod.yaml
htpasswd
sudo apt install apache2-utils -y
htpasswd -c .htpasswd user
ls -la
cat .htpasswd
kubectl create secret generic --from-file .htpasswd 
kubectl create secret generic nginx-htpasswd --from-file .htpasswd 
rm .htpasswd 
vi nginx-configmap.yaml
kubectl apply -f nginx-configmap.yaml
kubectl describe configmaps nginx-config 
vi nginx-pod.yaml
vi nginx-configmap.yaml
kubectl apply -f nginx-pod.yaml 
kubectl get pods -o wide
kubectl exec -it nginx-pod -- curl 192.168.30.120
kubectl exec -it nginx-pod -- curl -u user:student 192.168.30.120
vi ../../day2/day2-history.txt 
history 
history | awk '$1 > 576' | cut -c 8- > ../day3-history.txt
